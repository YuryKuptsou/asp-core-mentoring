@model IEnumerable<ProductViewModel>

<div class="container my-2">
    <a class="btn btn-primary btn-sm mb-2" asp-action="Create">Create</a>
    <table class="table">
        <tr class="table-header text-center">
            <th>Product Name</th>
            <th>Supplier</th>
            <th>Category</th>
            <th>Quantity Per Unit</th>
            <th>Unit Price</th>
            <th>Units In Stock</th>
            <th>Units On Order</th>
            <th>Reorder Level</th>
            <th>Discontinued</th>
        </tr>
        <tbody data-bind="foreach: products">
            <tr>
                <td data-bind="text: productName"></td>
                <td data-bind="text: companyName"></td>
                <td data-bind="text: categoryName"></td>
                <td data-bind="text: quantityPerUnit"></td>
                <td data-bind="text: unitPrice"></td>
                <td data-bind="text: unitsInStock"></td>
                <td data-bind="text: unitsOnOrder"></td>
                <td data-bind="text: reorderLevel"></td>
                <td data-bind="text: discontinued"></td>
                <td><a class="btn btn-primary btn-sm" data-bind="attr: {href: editPath}">Edit</a></td>
            </tr>
        </tbody>
        @*@foreach (var product in Model)
        {
            <tr >
                <td>@product.ProductName</td>
                <td>@product.CompanyName</td>
                <td>@product.CategoryName</td>
                <td>@product.QuantityPerUnit</td>
                <td>@product.UnitPrice.ToString("F2")</td>
                <td>@product.UnitsInStock</td>
                <td>@product.UnitsOnOrder</td>
                <td>@product.ReorderLevel</td>
                <td>@product.Discontinued</td>
                <td><a class="btn btn-primary btn-sm" asp-action="Update" asp-route-id="@product.ProductID">Edit</a></td>
            </tr>*@
        @*}*@
    </table>
</div>

@section Scripts
{
<script>
    var uri = 'api/products';


    $("document").ready(function () {

        function Product(data) {
            this.productName = data.productName;
            this.companyName = data.companyName;
            this.categoryName = data.categoryName;
            this.quantityPerUnit = data.quantityPerUnit;
            this.unitPrice = data.unitPrice;
            this.unitsInStock = data.unitsInStock;
            this.unitsOnOrder = data.unitsOnOrder;
            this.reorderLevel = data.reorderLevel;
            this.discontinued = data.discontinued;
            this.editPath = '@Url.Action("Update")' + '?id=' + data.productID;
        }

        function ProductsViewModel() {
            var self = this;

            self.products = ko.observableArray([]);

            $.getJSON(uri, function (allData) {
                var mappedProducts = $.map(allData, function (item) { return new Product(item) });
                self.products(mappedProducts);
            });
        }

        ko.applyBindings(new ProductsViewModel());
    });
</script>
}